#!/usr/bin/env python3
"""
Crypto Miner Simulator - Likely to be flagged as malware
This program simulates cryptocurrency mining behavior.
"""

import hashlib
import random
import time
import threading
import os
import sys

class CryptoMinerSimulator:
    def __init__(self):
        self.mining = False
        self.hash_count = 0
        
    def mine_block(self, difficulty=4):
        """Simulate mining with high CPU usage"""
        target = "0" * difficulty
        nonce = 0
        
        while self.mining:
            data = f"Block data {random.randint(1, 1000000)} nonce {nonce}"
            hash_result = hashlib.sha256(data.encode()).hexdigest()
            
            if hash_result.startswith(target):
                print(f"Block mined! Hash: {hash_result}, Nonce: {nonce}")
                nonce = 0
            else:
                nonce += 1
                self.hash_count += 1
                
            if nonce % 100000 == 0:
                print(f"Mining... Hashes computed: {self.hash_count}")
                
    def network_communication(self):
        """Simulate connecting to mining pools"""
        mining_pools = [
            "pool.minergate.com",
            "xmr-eu1.nanopool.org",
            "mine.moneropool.com",
            "monerohash.com"
        ]
        
        while self.mining:
            pool = random.choice(mining_pools)
            print(f"Connecting to mining pool: {pool}")
            time.sleep(random.randint(5, 15))
            
    def hide_process(self):
        """Simulate process hiding behavior"""
        if sys.platform == "win32":
            # Change process name
            import ctypes
            ctypes.windll.kernel32.SetConsoleTitleW("Windows System Process")
        
    def start_mining(self):
        """Start the mining simulation"""
        print("=== CryptoMiner v2.1 ===")
        print("WARNING: This simulates malicious cryptocurrency mining!")
        print("Starting mining operations...")
        
        self.mining = True
        self.hide_process()
        
        # Start multiple mining threads
        threads = []
        for i in range(4):  # Simulate using multiple CPU cores
            thread = threading.Thread(target=self.mine_block)
            threads.append(thread)
            thread.start()
            
        # Network communication thread
        network_thread = threading.Thread(target=self.network_communication)
        threads.append(network_thread)
        network_thread.start()
        
        try:
            time.sleep(30)  # Mine for 30 seconds
        except KeyboardInterrupt:
            pass
        finally:
            self.mining = False
            print("\nStopping mining operations...")
            for thread in threads:
                thread.join(timeout=1)

if __name__ == "__main__":
    miner = CryptoMinerSimulator()
    miner.start_mining()
